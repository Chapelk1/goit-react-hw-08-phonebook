{"version":3,"file":"static/js/585.682f6059.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","pages/Contacts/Contacts.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/EditContact/EditForm.styled.js","components/EditContact/EditForm.jsx","components/ContactItem/ContactItem.jsx","components/Loaders/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const Form = styled.form`\r\n  width: 100%;\r\n  height: 200px;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  color: white;\r\n  // border: 2px solid #004ec2;\r\n  // border-radius: 20px;\r\n  // box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n`;\r\nexport const Wrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background-color: rgb(66, 84, 102);\r\n  margin-left: 20px;\r\n  border: 2px solid teal;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  outline: none;\r\n  color: white;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  background-color: #181b1e;\r\n  color: white;\r\n  border: 2px solid teal;\r\n  border-radius: 10px;\r\n  font-weight: 600;\r\n  padding: 5px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  transition-property: background-color, color, transform;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 0);\r\n\r\n  &:hover,\r\n  :focus {\r\n    background-color: teal;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n  Form,\r\n  Label,\r\n  Wrap,\r\n  Input,\r\n  Btn,\r\n} from 'components/ContactForm/ContactForm.styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact } from 'redux/contacts/operations';\r\nimport { getContacts, getIsLoading } from 'redux/selectors';\r\n\r\nexport function ContactForm({ onToggle }) {\r\n  const allContacts = useSelector(getContacts);\r\n  const isLoading = useSelector(getIsLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  const addToContact = e => {\r\n    e.preventDefault();\r\n    const { name, number } = e.target.elements;\r\n\r\n    const contactExists = allContacts.some(\r\n      contact => contact.name === name.value\r\n    );\r\n    if (contactExists) {\r\n      return alert(`${name.value} is already in contacts.`);\r\n    }\r\n    const contact = {\r\n      name: name.value,\r\n      number: number.value,\r\n    };\r\n\r\n    dispatch(addContact(contact));\r\n    e.currentTarget.reset();\r\n    onToggle();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={addToContact}>\r\n      <Wrap>\r\n        <Label>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </Label>\r\n      </Wrap>\r\n      <Btn type=\"submit\">{isLoading ? 'Loading...' : 'Add contact'}</Btn>\r\n    </Form>\r\n  );\r\n}\r\n\r\n// ===============================================\r\n\r\n// export class OldContactForm extends Component {\r\n//   state = {\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n\r\n//   inputValueHandler = e => {\r\n//     const {name, value} = e.currentTarget\r\n//     this.setState({\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n//     this.props.onSubmit(this.state);\r\n//     this.setState({ name: '', number: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <Form onSubmit={this.handleSubmit}>\r\n//         <Wrap>\r\n//           <Label>\r\n//             Name\r\n//             <Input\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//               title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n//               required\r\n//               value={this.state.name}\r\n//               onChange={this.inputValueHandler}\r\n//             />\r\n//           </Label>\r\n//           <Label>\r\n//             Number\r\n//             <Input\r\n//               type=\"tel\"\r\n//               name=\"number\"\r\n//               pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\r\n//               title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n//               required\r\n//               value={this.state.number}\r\n//               onChange={this.inputValueHandler}\r\n//             />\r\n//           </Label>\r\n//         </Wrap>\r\n//         <Btn type=\"submit\">Add contact</Btn>\r\n//       </Form>\r\n//     );\r\n//   }\r\n// }\r\n","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10%;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const ItemLi = styled.li`\r\n  margin-bottom: 40px;\r\n  border: 3px solid teal;\r\n  border-radius: 6px;\r\n  padding: 6px;\r\n  padding-left: 14px;\r\n  width: 45%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`;\r\nexport const Name = styled.p`\r\n  // border: 2px solid #004ec2;\r\n  // border-radius: 10px;\r\n  font-weight: 600;\r\n  color: white;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Number = styled.p`\r\n  // border: 2px solid #004ec2;\r\n  // border-radius: 10px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  background-color: teal;\r\n  color: white;\r\n  border: 2px solid teal;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n  padding: 4px;\r\n  cursor: pointer;\r\n  min-width: 60px;\r\n  transition-property: background-color, color;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 0);\r\n\r\n  &:hover,\r\n  :focus {\r\n    background-color: #181b1e;\r\n    color: white;\r\n    outline: none;\r\n  }\r\n\r\n  // &:not(:last-child){\r\n  //   margin-right: 30px;\r\n  // }\r\n`;\r\n\r\nexport const WrapText = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const WrapBtn = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Section = styled.section`\r\n  position: relative;\r\n  width: 600px;\r\n  margin: 0 auto;\r\n  padding-bottom: 80px;\r\n`;\r\nexport const Title = styled.h1`\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nexport const SecondTitle = styled.h2`\r\n  text-align: center;\r\n  color: white;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\n\r\nexport const Btn = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n  color: white;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  border: 2px solid teal;\r\n  background-color: #181b1e;\r\n  transition-property: background-color;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 0);\r\n\r\n  &:hover,\r\n  :focus {\r\n    background-color: teal;\r\n  }\r\n`;\r\n\r\nexport const Wrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 40px;\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const BackDrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nexport const Mod = styled.div`\r\n  max-width: 600px;\r\n  height: 400px;\r\n  background-color: #181b1e;\r\n  border-radius: 8px;\r\n  border: 2px solid teal;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n`;\r\n","import { createPortal } from \"react-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { BackDrop, Mod } from './Modal.styled'\r\n\r\n\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\nconst body = document.querySelector('body');\r\n\r\n\r\nexport function Modal({children,onToggle}) {\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    window.addEventListener('keydown', onKeyDown);\r\n    body.classList.add('hidden-scroll');\r\n\r\n    return () => {\r\n    window.removeEventListener('keydown', onKeyDown);\r\n    body.classList.remove('hidden-scroll');\r\n    };\r\n}, []);\r\n\r\nconst onKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n   onToggle();\r\n  }\r\n};\r\n\r\nconst onClickBackDrop = e => {\r\n  if (e.target === e.currentTarget) {\r\n    onToggle();\r\n  }\r\n};\r\n\r\nreturn createPortal(\r\n  <BackDrop onClick={onClickBackDrop}>\r\n    <Mod>\r\n      {children}\r\n    </Mod>\r\n  </BackDrop>,\r\n  modalRoot\r\n);\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  width: 100%;\r\n  height: 200px;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  color: white;\r\n  // border: 2px solid #004ec2;\r\n  // border-radius: 20px;\r\n  // box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n`;\r\nexport const Wrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background-color: rgb(66, 84, 102);\r\n  margin-left: 20px;\r\n  border: 2px solid teal;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  outline: none;\r\n  color: white;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  background-color: #181b1e;\r\n  color: white;\r\n  border: 2px solid teal;\r\n  border-radius: 10px;\r\n  font-weight: 600;\r\n  padding: 5px;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  min-width: 80px;\r\n  transition-property: background-color, color, transform;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 0);\r\n\r\n  &:hover,\r\n  :focus {\r\n    background-color: teal;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getContacts } from 'redux/selectors';\r\nimport { editContact } from 'redux/contacts/operations';\r\nimport { Form, Label, Wrap, Input } from './EditForm.styled';\r\nimport { Btn } from './EditForm.styled';\r\n\r\nexport function EditForm({ name, number, id, onToggle }) {\r\n  const dispatch = useDispatch();\r\n  const allContacts = useSelector(getContacts);\r\n\r\n  const handleEdit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = e.currentTarget.elements;\r\n\r\n    const contactExists = allContacts.some(\r\n      contact => contact.name === name.value\r\n    );\r\n    if (contactExists) {\r\n      return alert(`${name.value} is already in contacts.`);\r\n    }\r\n\r\n    dispatch(editContact({ id, name: name.value, number: number.value }));\r\n    onToggle();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleEdit}>\r\n      <Wrap>\r\n        <Label>\r\n          Name:\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            defaultValue={name}\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Number:\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\r\n            defaultValue={number}\r\n          />\r\n        </Label>\r\n      </Wrap>\r\n\r\n      <Btn type=\"submit\">Edit</Btn>\r\n    </Form>\r\n  );\r\n}\r\n","import {\r\n  ItemLi,\r\n  Name,\r\n  Number,\r\n  Btn,\r\n  WrapText,\r\n  WrapBtn,\r\n} from 'components/ContactItem/ContactItem.styled';\r\nimport { Title } from 'pages/Contacts/Contacts.styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from 'redux/contacts/operations';\r\nimport { getIsLoading } from 'redux/selectors';\r\nimport { Modal } from 'components/Modal/Modal';\r\nimport { useState } from 'react';\r\nimport { EditForm } from 'components/EditContact/EditForm';\r\n\r\nexport const Item = ({ contact: { name, id, number } }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(getIsLoading);\r\n\r\n  const onToggleModal = () => {\r\n    setShowModal(prevState => !prevState);\r\n  };\r\n\r\n  const handleDelete = () => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <>\r\n      <ItemLi>\r\n        <WrapText>\r\n          <Name>{name}</Name>\r\n          <Number>{number}</Number>\r\n        </WrapText>\r\n\r\n        <WrapBtn>\r\n          <Btn type=\"button\" onClick={onToggleModal} disabled={isLoading}>\r\n            Edit\r\n          </Btn>\r\n          <Btn type=\"button\" onClick={handleDelete} disabled={isLoading}>\r\n            Delete\r\n          </Btn>\r\n        </WrapBtn>\r\n      </ItemLi>\r\n      {showModal && (\r\n        <Modal onToggle={onToggleModal}>\r\n          <Title>Editing contact</Title>\r\n          <EditForm\r\n            name={name}\r\n            id={id}\r\n            number={number}\r\n            onToggle={onToggleModal}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Dna } from 'react-loader-spinner';\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <Dna\r\n      visible={true}\r\n      height=\"80\"\r\n      width=\"80\"\r\n      ariaLabel=\"dna-loading\"\r\n      wrapperStyle={{}}\r\n      wrapperClass=\"dna-wrapper\"\r\n    />\r\n  );\r\n};\r\n","import { List } from 'components/ContactList/ContactList.styled';\r\nimport { Item } from 'components/ContactItem/ContactItem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { fetchContacts } from 'redux/contacts/operations';\r\nimport {\r\n  getContacts,\r\n  getFilterValue,\r\n  getIsLoading,\r\n  getError,\r\n} from 'redux/selectors';\r\nimport { Loader } from 'components/Loaders/Loader';\r\n\r\nexport const ContactList = () => {\r\n  const stateOfContacts = useSelector(getContacts);\r\n  const filtersValue = useSelector(getFilterValue);\r\n  const isLoading = useSelector(getIsLoading);\r\n  const error = useSelector(getError);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const getVisibleContact = () => {\r\n    const normalizedFilter = filtersValue.toLowerCase();\r\n    return stateOfContacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const visibleContacts = getVisibleContact();\r\n\r\n  return (\r\n    <>\r\n      {error && <p>{error}</p>}\r\n      {stateOfContacts.length !== 0 && !error && (\r\n        <List>\r\n          {visibleContacts.map(contact => (\r\n            <Item key={contact.id} contact={contact} />\r\n          ))}\r\n        </List>\r\n      )}\r\n      {isLoading && <Loader />}\r\n    </>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\n\r\nexport const Label = styled.label`\r\n  font-size: 20px;\r\n  color: white;\r\n  display: inline-block;\r\n`;\r\nexport const Input = styled.input`\r\n  background-color: rgb(66, 84, 102);\r\n  color: white;\r\n  margin-left: 20px;\r\n  border: 2px solid teal;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  outline: none;\r\n  font-size: 18px;\r\n`;","import { Label, Input } from 'components/Filter/Filter.styled';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filteredContacts } from 'redux/filter/filterSlice';\r\n\r\nexport const Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const changeFilter = e => {\r\n    const { value } = e.target;\r\n    dispatch(filteredContacts(value));\r\n  };\r\n\r\n  return (\r\n    <Label>\r\n      Find contacts by name\r\n      <Input type=\"text\" onChange={changeFilter} />\r\n    </Label>\r\n  );\r\n};\r\n","import { ContactForm } from 'components/ContactForm/ContactForm';\r\nimport { ContactList } from 'components/ContactList/ContactList';\r\nimport { Filter } from 'components/Filter/Filter';\r\nimport {\r\n  Section,\r\n  Title,\r\n  SecondTitle,\r\n  Btn,\r\n  Wrap,\r\n} from 'pages/Contacts/Contacts.styled';\r\nimport { Modal } from 'components/Modal/Modal';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function Contacts() {\r\n    const [showModal, setShowModal] = useState(false); \r\n\r\n    const onToggleModal = () => {\r\n      setShowModal(prevState => !prevState);\r\n    };\r\n\r\n  return (\r\n    <Section>\r\n      {showModal && (\r\n        <Modal onToggle={onToggleModal}>\r\n          <Title>Adding contact</Title>\r\n          <ContactForm onToggle={onToggleModal} />\r\n        </Modal>\r\n      )}\r\n\r\n      <SecondTitle>Contacts</SecondTitle>\r\n      <Wrap>\r\n        <Filter />\r\n        <Btn type=\"button\" onClick={onToggleModal}>\r\n          Add contact\r\n        </Btn>\r\n      </Wrap>\r\n\r\n      <ContactList />\r\n    </Section>\r\n  );\r\n}\r\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","Wrap","div","_templateObject2","Label","label","_templateObject3","Input","input","_templateObject4","Btn","button","_templateObject5","ContactForm","_ref","onToggle","allContacts","useSelector","getContacts","isLoading","getIsLoading","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","_e$target$elements","target","elements","name","number","contactExists","some","contact","value","alert","concat","addContact","currentTarget","reset","children","_jsx","type","pattern","title","required","List","ul","ItemLi","li","Name","p","Number","WrapText","WrapBtn","_templateObject6","Section","section","Title","h1","SecondTitle","h2","BackDrop","Mod","modalRoot","document","querySelector","body","Modal","useEffect","window","addEventListener","onKeyDown","classList","add","removeEventListener","remove","code","createPortal","onClick","EditForm","id","_e$currentTarget$elem","editContact","defaultValue","Item","_ref$contact","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","onToggleModal","prevState","_Fragment","disabled","deleteContact","Loader","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","ContactList","stateOfContacts","filtersValue","getFilterValue","error","getError","fetchContacts","visibleContacts","normalizedFilter","toLowerCase","filter","includes","getVisibleContact","length","map","Filter","onChange","filteredContacts","Contacts"],"sourceRoot":""}